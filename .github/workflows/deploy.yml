name: Deploy da Aplicação

# Controla quando a ação será executada
on:
  # Dispara o workflow em eventos de push para a branch main
  push:
    branches: [ "main" ]
  # Permite executar este workflow manualmente através da interface do GitHub
  workflow_dispatch:

jobs:
  # Job de deploy
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Faz o deploy via SSH usando senha
      - name: Deploy para o servidor
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 191.252.177.174
          username: root
          password: "MZE36vkT@#"
          script: |
            cd /var/www/timeboard/votacao-backend
            git pull origin main
            # Install Node.js dependencies
            yarn install --frozen-lockfile
            
            # Check if pm2 is installed globally, if not install it
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi
            
            # Copy production environment file
            echo "Setting up production environment..."
            cp env-production-mysql.txt .env
            
            # Verify environment variables for GitHub OAuth
            echo "Checking GitHub OAuth configuration..."
            if [ -z "$GITHUB_CLIENT_ID" ] || [ -z "$GITHUB_CLIENT_SECRET" ]; then
              echo "WARNING: GitHub OAuth environment variables not set!"
              echo "Please configure GITHUB_CLIENT_ID and GITHUB_CLIENT_SECRET in your server environment"
            else
              echo "GitHub OAuth environment variables are configured"
            fi
            
            # Build the application for production
            yarn build
            
            # Restart or start the application
            pm2 describe votacao-backend > /dev/null
            if [ $? -eq 0 ]; then
              pm2 restart votacao-backend
            else
              pm2 start dist/main.js --name "votacao-backend" --env production
            fi
            
            # Save PM2 process list
            pm2 save
            
            # Show PM2 status
            pm2 status
            
            # Show application logs
            echo "Application logs:"
            pm2 logs votacao-backend --lines 10 